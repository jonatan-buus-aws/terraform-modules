{"components":{"schemas":{"Amount":{"description":"A representation of an amount used through various payment related operations","properties":{"currency":{"$ref":"#/components/schemas/CURRENCY","description":"The numeric currency code as defined by ISO-4217"},"value":{"description":"The amount value in the currency's smallest unit, i.e. cents, pence etc.","example":1000,"format":"int64","minimum":100,"type":"integer"}},"required":["value","currency"],"type":"object"},"AuthorizePaymentRequest":{"properties":{"amount":{"$ref":"#/components/schemas/Amount"},"card_holder_name":{"description":"The card holder's full name as printed on the consumer's card","example":"Jonatan Evald Buus","type":"string"},"card_number":{"description":"The consumer's card number","example":5402871234567890,"type":"integer"},"cvv":{"description":"The card verification value for the consumer's card","example":123,"type":"integer"},"expiry_month":{"description":"The expiry month for the consumer's card","example":12,"type":"integer"},"expiry_year":{"description":"The expiry year for the consumer's card","example":21,"type":"integer"}},"required":["amount","card_number","expiry_month","expiry_year","cvv"],"type":"object"},"AuthorizePaymentResponse":{"properties":{"auth_code":{"description":"The authorization code returned by the upstream provider\n","example":"654321-ABCD","maxLength":40,"minLength":1,"type":"string"}},"required":["auth_code"],"type":"object"},"CURRENCY":{"description":"Currency code as defined by ISO-4217 using the numeric codes as values and the alpha-3 codes as names","enum":[208,978,826,840],"example":"EUR","format":"ISO-4217","type":"integer","x-enum-varnames":["DKK","EUR","GBP","USD"]},"InitializePaymentRequest":{"properties":{"amount":{"$ref":"#/components/schemas/Amount"},"order_id":{"description":"The merchant's unique id for the order with which the payment is associated.\n","example":"AWS-103645","maxLength":40,"minLength":1,"type":"string"}},"required":["amount"],"type":"object"},"InitializePaymentResponse":{"properties":{"id":{"$ref":"#/components/schemas/RecordEntityId","description":"The payment gateway's unique ID for the consumer's payment"},"ip":{"description":"The source IP address from which the payment was created","example":"80.52.87.56","format":"ipv4","type":"string"},"port":{"description":"The source port from which the payment was created","example":37570,"format":"int32","type":"integer"}},"required":["id"],"type":"object"},"MerchantId":{"description":"The unique id of the merchant who will own the created payment","example":10045,"format":"int32","minimum":10000,"type":"integer"},"NotificationRequest":{"properties":{"auth_code":{"description":"The authorization code returned by the upstream provider\n","example":"654321-ABCD","maxLength":40,"minLength":1,"type":"string"},"iin":{"description":"The first 4 digits of the consumer's card number","example":5402,"type":"integer"},"status":{"$ref":"#/components/schemas/PAYMENTSTATUS"}},"required":["status"],"type":"object"},"PAYMENTMETHODID":{"description":"The unique id for the payment method (AMEX, MasterCard, VISA etc.)","enum":[101,102,103,104,105,106,107,108,109,110],"type":"integer","x-enum-descriptions":["Charge or credit card powered by the global Amercan Express scheme","Local Danish card scheme","Local Danish card scheme which can be authorized as a VISA card","Credit card powered by the global Diners Club scheme","Credit or debit card powered by the global Discover scheme","Credit card powered by the global Japan Credit Bureau scheme","Debit card scheme owned by MasterCard","Credit or debit card powered by the global MasterCard scheme","Credit or debit card powered by the global VISA scheme","Credit card powered by the global VISA scheme"],"x-enum-varnames":["AMEX","DANKORT","VISA_DANKORT","DINERS_CLUB","DISCOVER","JCB","MAESTRO","MASTERCARD","VISA","VISA_ELECTRON"]},"PAYMENTSTATUS":{"description":"Status of a payment","enum":[10,20,21,30,31,40,50],"example":"AUTHORIZATION_SUCCESSFUL","type":"integer","x-enum-varnames":["INITIALIZED","AUTHORIZATION_SUCCESSFUL","AUTHORIZATION_DECLINED","CAPTURE_SUCCESSFUL","CAPTURE_DECLINED","REFUND_SUCCESSFUL","CANCEL_SUCCESSFUL"]},"Payment":{"allOf":[{"$ref":"#/components/schemas/InitializePaymentRequest"},{"description":"A complete representation of the consumer's payment","properties":{"amount":{"$ref":"#/components/schemas/Amount"},"created":{"description":"Timestamp specifying when the payment was created","example":"2017-07-21T17:32:28Z","format":"date-time","type":"string"},"id":{"$ref":"#/components/schemas/RecordEntityId","description":"The payment gateway's unique ID for the consumer's payment"},"ip":{"description":"The source IP address from which the payment was created","example":"80.52.87.56","format":"ipv4","type":"string"},"merchant_id":{"$ref":"#/components/schemas/MerchantId"},"modified":{"description":"Timestamp specifying when the payment was last modified","example":"2017-07-21T17:32:28Z","format":"date-time","type":"string"},"payment_method":{"$ref":"#/components/schemas/PAYMENTMETHODID"},"payment_status":{"$ref":"#/components/schemas/PAYMENTSTATUS"},"port":{"description":"The source port from which the payment was created","example":37570,"format":"int32","type":"integer"}},"required":["id","amount","merchant_id","payment_status","payment_method","ip","port","created","modified"],"type":"object"}]},"RecordEntityId":{"description":"The payment gateway's unique ID for a payment, payment transaction or an entity associated with either such as an amount","example":1234,"format":"int64","minimum":1,"type":"integer"},"STATUSCODE":{"description":"The status codes that may be returned","enum":[404001,403001,500001],"type":"integer","x-enum-descriptions":["The specified payment could not be not found","The specified payment is not owned by the merchant","Invalid location constructed for payment"],"x-enum-varnames":["PAYMENT_NOT_FOUND","PAYMENT_NOT_OWNED_BY_MERCHANT","INVALID_PAYMENT_URI"]},"StatusMessage":{"properties":{"code":{"$ref":"#/components/schemas/STATUSCODE","description":"The status code returned by the system"},"message":{"description":"A description of the status code returned by the system","example":"Invalid authorization header for end-point: /example. Authorization header must use the HTTP Bearer authentication.","minimum":10,"type":"string"}},"required":["system","code","description"],"type":"object"}},"securitySchemes":{"paymentGatewayAuth":{"bearerFormat":"JWT","description":"JWT based HTTP Bearer Authentication used across all services","scheme":"bearer","type":"http"}}},"info":{"description":"The payment gateway APIs exposes operations for performing a payment, including:\n* Initialization of a payment\n* Authorization of a payment\nAdditionally the APIs includes operations for retrieving a specific payment.\n","title":"Payment Gateway APIs","version":"1.0.0"},"openapi":"3.0.0","paths":{"/v1/{merchant_id}/authorize-payment/{payment_id}/acquirer-1":{"parameters":[{"description":"The unique id of the merchant who owns the payment","in":"path","name":"merchant_id","required":true,"schema":{"$ref":"#/components/schemas/MerchantId"}},{"description":"The unique id of the payment that will be retrieved","in":"path","name":"payment_id","required":true,"schema":{"$ref":"#/components/schemas/RecordEntityId"}}],"post":{"description":"Authorizes a payment with the provided details through acquirer 1, please note that:\n* Merchants can only authorize their own payments\n","operationId":"authorize_payment_acquirer_1","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizePaymentRequest"}}},"description":"The details for the payment that will be authorized","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizePaymentResponse"}}},"description":"The details for the authorized payment"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Bad request - The provided authorization request contains invalid or missing data"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Forbidden - The merchant has successfully authenticated, but is not authorized to access the specified payment"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Not found - The specified payment could not be found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Internal server error - Authorization of the specified payment failed internally"},"502":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Internal server error - Authorization of the specified payment failed with the upstream provider"},"504":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Internal server error - Authorization of the specified payment failed due to a timeout while communication with the upstream provider"}},"summary":"Authorizes the specified payment through acquirer 1","tags":["payment_integration_v1"],"x-amazon-apigateway-integration":{"passthroughBehavior":"WHEN_NO_MATCH","requestTemplates":{"application/json":"{ \"statusCode\" : 200 }"},"responses":{"default":{"responseTemplates":{"application/json":"{\n  \"status\": {\n      \"code\" : 10000,\n      \"message\": \"success\"\n  },\n  \"auth_code\": 123456\n}"},"statusCode":200}},"type":"MOCK"}}},"/v1/{merchant_id}/payment":{"get":{"description":"Retrieves the details for all payments for the specified merchant, please note that:\n* Merchants can only access their own payments\n","operationId":"get_all_payments","responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Payment"},"type":"array"}}},"description":"The details for all payments for the specified merchant"},"400":{"description":"Bad request - The merchant id is missing from the path"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Internal server error - Retrieval of the payments for the specified merchant failed"}},"summary":"Retrieves the details for all payments for the specified merchant","tags":["payment_v1"],"x-amazon-apigateway-integration":{"connectionType":"INTERNET","httpMethod":"GET","type":"HTTP_PROXY","uri":"http://pgw.eks.aws.jonatanbuus.dk/{proxy+}"}},"parameters":[{"description":"The unique id of the merchant who will own the initalized payment","in":"path","name":"merchant_id","required":true,"schema":{"$ref":"#/components/schemas/MerchantId"}}],"post":{"description":"Initializes a new payment with the provided details, please note that:\n* Merchants can only initialze a payment for themselves\n* Merchants will only be able to access their own payments\n","operationId":"initialize_payment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InitializePaymentRequest"}}},"description":"The details for the payment that will be initialized","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InitializePaymentResponse"}}},"description":"The details for the initialized payment"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Bad request - The provided initialization request contains invalid or missing data"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Forbidden - The merchant has successfully authenticated, but is not authorized to access the specified point of sale (pos)"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Not found - The configuration for the specified merchant or point of sales (pos) could not be found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Internal server error - Initialization of the payment failed"}},"summary":"Initalizes a new payment for the specified merchant","tags":["payment_v1"],"x-amazon-apigateway-integration":{"passthroughBehavior":"WHEN_NO_MATCH","requestTemplates":{"application/json":"{ \"statusCode\" : 201 }"},"responses":{"default":{"responseTemplates":{"application/json":"{ \"id\": 1234 }"},"statusCode":201}},"type":"MOCK"}}},"/v1/{merchant_id}/payment/{payment_id}":{"get":{"description":"Retrieves the details for the specified payment, please note that:\n* Merchants can only access their own payments\n","operationId":"get_payment","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payment"}}},"description":"The details for the specified payment"},"400":{"description":"Bad request - The merchant id or payment id is missing from the path"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Forbidden - The merchant has successfully authenticated, but is not authorized to access the specified payment"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Not found - The specified payment could not be found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Internal server error - Retrieval of the specified payment failed"}},"summary":"Retrieves the details for the specified payment","tags":["payment_v1"],"x-amazon-apigateway-integration":{"requestTemplates":{"application/json":"{ \"statusCode\" : 200 }"},"responses":{"default":{"responseTemplates":{"application/json":"{\n  \"id\": 1234,\n  \"payment_method\": 108,\n  \"payment_status\": 10,\n  \"provider_id\" : 1,\n  \"amount\": {\n    \"value\" : 10000,\n    \"currency\": 208\n    }\n}"},"statusCode":200}},"type":"MOCK"}},"parameters":[{"description":"The unique id of the merchant who owns the payment","in":"path","name":"merchant_id","required":true,"schema":{"$ref":"#/components/schemas/MerchantId"}},{"description":"The unique id of the payment that will be retrieved","in":"path","name":"payment_id","required":true,"schema":{"$ref":"#/components/schemas/RecordEntityId"}}],"post":{"description":"Authorizes a payment with the provided details, please note that:\n* Merchants can only authorize their own payments\n","operationId":"authorize_payment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizePaymentRequest"}}},"description":"The details for the payment that will be authorized","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizePaymentResponse"}}},"description":"The details for the authorized payment"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Bad request - The provided authorization request contains invalid or missing data"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Forbidden - The merchant has successfully authenticated, but is not authorized to access the specified payment"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Not found - The specified payment could not be found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Internal server error - Authorization of the specified payment failed internally"},"502":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Internal server error - Authorization of the specified payment failed with the upstream provider"},"504":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Internal server error - Authorization of the specified payment failed due to a timeout while communication with the upstream provider"}},"summary":"Authorizes the specified payment","tags":["payment_v1"],"x-amazon-apigateway-integration":{"credentials":"arn:aws:iam::996046942922:role/api-gateway-service-executor","httpMethod":"POST","passthroughBehavior":"WHEN_NO_MATCH","requestTemplates":{"application/json":"#set($allParams = $input.params()){    \"stateMachineArn\": \"arn:aws:states:us-east-1:996046942922:stateMachine:authorize-payment-integration\",     \"input\" : \"{           \\\"body\\\": $util.escapeJavaScript($input.json('$') ),        #foreach($type in $allParams.keySet())            #set($params = $allParams.get($type))        \\\"$type\\\" : {            #foreach($paramName in $params.keySet())            \\\"$paramName\\\" : \\\"$util.escapeJavaScript($params.get($paramName))\\\"                #if($foreach.hasNext),#end            #end        }            #if($foreach.hasNext),#end        #end    }\"}"},"responses":{"default":{"responseTemplates":{"application/json":"#set($inputRoot = $input.path('$'))$inputRoot.output"},"statusCode":200}},"type":"AWS","uri":"arn:aws:apigateway:us-east-1:states:action/StartSyncExecution"}}},"/v1/{merchant_id}/payment/{payment_id}/notification":{"parameters":[{"description":"The unique id of the merchant who owns the payment","in":"path","name":"merchant_id","required":true,"schema":{"$ref":"#/components/schemas/MerchantId"}},{"description":"The unique id of the payment that will be retrieved","in":"path","name":"payment_id","required":true,"schema":{"$ref":"#/components/schemas/RecordEntityId"}}],"post":{"description":"Posts a notifications for a payment with the provided details, please note that:\n* Merchants can only post notifications for their own payments\n","operationId":"post_notification","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationRequest"}}},"description":"The details for the notification that will be posted","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payment"}}},"description":"Notification has been successfully posted for the specified payment"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Bad request - The provided notification request contains invalid or missing data"},"403":{"description":"Forbidden - The merchant has successfully authenticated, but is not authorized to access the specified payment"},"404":{"description":"Not found - The specified payment could not be found"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusMessage"}}},"description":"Internal server error - Authorization of the specified payment failed internally"}},"summary":"Posts a notifications for the specified payment","tags":["payment_v1"],"x-amazon-apigateway-integration":{"passthroughBehavior":"WHEN_NO_MATCH","requestTemplates":{"application/json":"{ \"statusCode\" : 200 }"},"responses":{"default":{"statusCode":200}},"type":"MOCK"}}}},"security":[{"paymentGatewayAuth":[]}],"servers":[{"url":"https://api.aws.jonatanbuus.dk"}]}